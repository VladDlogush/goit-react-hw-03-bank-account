{"version":3,"sources":["components/Dashboard/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Controls/Controls.module.css","components/Dashboard/Controls/Controls.jsx","components/Dashboard/Balance/Balance.jsx","components/Dashboard/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.jsx","components/App/App.jsx","index.js","components/Dashboard/Balance/Balance.module.css"],"names":["module","exports","toast","configure","Controls","state","input","handleChange","e","setState","target","value","handleClick","props","handleTransaction","balance","amount","Number","date","Date","toLocaleString","transaction","id","shortid","generate","type","name","reset","this","className","styles","controls","onChange","controls__input","onClick","controls__button","Component","Balance","handleTotalAmount","role","aria-label","balance__text","TransactionHistory","transactions","history","transaction__head","transaction__item","map","key","Dashboard","prevState","filter","reduce","acc","localTransactions","localStorage","getItem","localBalance","JSON","parse","prevProps","setItem","stringify","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b81a178c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__1LBR3\",\"transaction__head\":\"TransactionHistory_transaction__head__LNhFQ\",\"transaction__item\":\"TransactionHistory_transaction__item__dLFFM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__3u_Jw\",\"controls__input\":\"Controls_controls__input__175Gr\",\"controls__button\":\"Controls_controls__button__3Rbp2\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { toast } from 'react-toastify';\nimport styles from './Controls.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\nclass Controls extends Component {\n  state = {\n    input: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      input: e.target.value,\n    });\n  };\n\n  handleClick = e => {\n    const { handleTransaction, balance } = this.props;\n    const { input } = this.state;\n\n    const amount = Number(input);\n    const date = new Date().toLocaleString();\n\n    const transaction = {\n      id: shortid.generate(),\n      type: e.target.name,\n      amount,\n      date,\n    };\n\n    if (input === '0' || input === '' || Number(input) <= 0) {\n      toast('Введите сумму для проведения операции!');\n      this.reset();\n      return;\n    }\n\n    if (input > balance && transaction.type === 'withdrawal') {\n      toast('На счету недостаточно средств для проведения операции!');\n      this.reset();\n      return;\n    }\n\n    handleTransaction(transaction);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ input: '' });\n  };\n\n  render() {\n    const { input } = this.state;\n    return (\n      <section className={styles.controls}>\n        <input\n          type=\"number\"\n          name=\"balance\"\n          value={input}\n          onChange={this.handleChange}\n          className={styles.controls__input}\n        />\n        <button\n          type=\"button\"\n          name=\"deposit\"\n          onClick={this.handleClick}\n          className={styles.controls__button}\n        >\n          Deposit\n        </button>\n        <button\n          type=\"button\"\n          name=\"withdrawal\"\n          onClick={this.handleClick}\n          className={styles.controls__button}\n        >\n          Withdraw\n        </button>\n      </section>\n    );\n  }\n}\n\nControls.propTypes = {\n  handleTransaction: PropTypes.func.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ handleTotalAmount, balance }) => {\n  return (\n    <section className={styles.balance}>\n      <span role=\"img\" aria-label=\"deposit\" className={styles.balance__text}>\n        ⬆️{handleTotalAmount('deposit')}$\n      </span>\n      <span role=\"img\" aria-label=\"withdrawal\" className={styles.balance__text}>\n        ⬇️{handleTotalAmount('withdrawal')}$\n      </span>\n      <span className={styles.balance__text}>Balance: {balance}$</span>\n    </section>\n  );\n};\n\nBalance.propTypes = {\n  handleTotalAmount: PropTypes.func.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions = [] }) => {\n  return (\n    <table className={styles.history}>\n      <thead className={styles.transaction__head}>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody className={styles.transaction__item}>\n        {transactions.map(transaction => (\n          <tr key={transaction.id}>\n            <td>{transaction.type}</td>\n            <td>{transaction.amount}</td>\n            <td>{transaction.date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport Controls from './Controls/Controls';\nimport Balance from './Balance/Balance';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n\nclass Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n  };\n\n  componentDidMount() {\n    const localTransactions = localStorage.getItem('transactions');\n    const localBalance = localStorage.getItem('balance');\n\n    if (localTransactions && localBalance) {\n      this.setState({\n        transactions: JSON.parse(localTransactions),\n        balance: JSON.parse(localBalance),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { transactions, balance } = this.state;\n    if (prevState.transactions !== transactions) {\n      localStorage.setItem('transactions', JSON.stringify([...transactions]));\n      localStorage.setItem('balance', JSON.stringify(balance));\n    }\n  }\n\n  handleTransaction = transaction => {\n    this.setState(prevState => {\n      return {\n        transactions: [...prevState.transactions, transaction],\n        balance:\n          transaction.type === 'withdrawal'\n            ? prevState.balance - transaction.amount\n            : prevState.balance + transaction.amount,\n      };\n    });\n  };\n\n  handleTotalAmount = type => {\n    const { transactions } = this.state;\n    const amount = transactions\n      .filter(transaction => transaction.type === type)\n      .reduce((acc, transaction) => {\n        return Number(transaction.amount) + Number(acc);\n      }, 0);\n\n    return amount;\n  };\n\n  render() {\n    const { transactions, balance } = this.state;\n    return (\n      <div>\n        <Controls\n          handleTransaction={this.handleTransaction}\n          balance={balance}\n        />\n        <Balance handleTotalAmount={this.handleTotalAmount} balance={balance} />\n        <TransactionHistory transactions={transactions} />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport Dashboard from '../Dashboard/Dashboard';\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__3n6Vt\",\"balance__text\":\"Balance_balance__text__3b4yx\"};"],"sourceRoot":""}